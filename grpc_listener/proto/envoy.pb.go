// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: envoy.proto

package unified_observability

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MetricRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SentTimestamp *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=sent_timestamp,json=sentTimestamp,proto3" json:"sent_timestamp,omitempty"`
	Query         string                 `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *MetricRequest) Reset() {
	*x = MetricRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_envoy_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricRequest) ProtoMessage() {}

func (x *MetricRequest) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricRequest.ProtoReflect.Descriptor instead.
func (*MetricRequest) Descriptor() ([]byte, []int) {
	return file_envoy_proto_rawDescGZIP(), []int{0}
}

func (x *MetricRequest) GetSentTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.SentTimestamp
	}
	return nil
}

func (x *MetricRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type Entry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AriaProvider               string `protobuf:"bytes,1,opt,name=AriaProvider,proto3" json:"AriaProvider,omitempty"`
	AriaService                string `protobuf:"bytes,2,opt,name=AriaService,proto3" json:"AriaService,omitempty"`
	CloudAccountID             string `protobuf:"bytes,3,opt,name=CloudAccountID,proto3" json:"CloudAccountID,omitempty"`
	KubernetesClusterName      string `protobuf:"bytes,4,opt,name=KubernetesClusterName,proto3" json:"KubernetesClusterName,omitempty"`
	KubernetesWorkloadName     string `protobuf:"bytes,5,opt,name=KubernetesWorkloadName,proto3" json:"KubernetesWorkloadName,omitempty"`
	KubernetesNamespaceName    string `protobuf:"bytes,6,opt,name=KubernetesNamespaceName,proto3" json:"KubernetesNamespaceName,omitempty"`
	KubernetesPodFullname      string `protobuf:"bytes,7,opt,name=KubernetesPodFullname,proto3" json:"KubernetesPodFullname,omitempty"`
	KubernetesPodName          string `protobuf:"bytes,8,opt,name=KubernetesPodName,proto3" json:"KubernetesPodName,omitempty"`
	KubernetesServiceName      string `protobuf:"bytes,9,opt,name=KubernetesServiceName,proto3" json:"KubernetesServiceName,omitempty"`
	Location                   string `protobuf:"bytes,10,opt,name=Location,proto3" json:"Location,omitempty"`
	PCCloudAddress             string `protobuf:"bytes,11,opt,name=PCCloudAddress,proto3" json:"PCCloudAddress,omitempty"`
	Region                     string `protobuf:"bytes,12,opt,name=Region,proto3" json:"Region,omitempty"`
	KubernetesServiceRequestor string `protobuf:"bytes,13,opt,name=KubernetesServiceRequestor,proto3" json:"KubernetesServiceRequestor,omitempty"`
	KubernetesServiceResponder string `protobuf:"bytes,14,opt,name=KubernetesServiceResponder,proto3" json:"KubernetesServiceResponder,omitempty"`
	KubernetesSrcClusterName   string `protobuf:"bytes,15,opt,name=KubernetesSrcClusterName,proto3" json:"KubernetesSrcClusterName,omitempty"`
	KubernetesSrcNamespace     string `protobuf:"bytes,16,opt,name=KubernetesSrcNamespace,proto3" json:"KubernetesSrcNamespace,omitempty"`
	EntityUID                  string `protobuf:"bytes,17,opt,name=EntityUID,proto3" json:"EntityUID,omitempty"`
	DestSpaceName              string `protobuf:"bytes,18,opt,name=DestSpaceName,proto3" json:"DestSpaceName,omitempty"`
	SourceSpaceName            string `protobuf:"bytes,19,opt,name=SourceSpaceName,proto3" json:"SourceSpaceName,omitempty"`
	ResponseCode               string `protobuf:"bytes,20,opt,name=ResponseCode,proto3" json:"ResponseCode,omitempty"`
	DefinedLabels              string `protobuf:"bytes,21,opt,name=definedLabels,proto3" json:"definedLabels,omitempty"`
}

func (x *Entry) Reset() {
	*x = Entry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_envoy_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Entry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Entry) ProtoMessage() {}

func (x *Entry) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Entry.ProtoReflect.Descriptor instead.
func (*Entry) Descriptor() ([]byte, []int) {
	return file_envoy_proto_rawDescGZIP(), []int{1}
}

func (x *Entry) GetAriaProvider() string {
	if x != nil {
		return x.AriaProvider
	}
	return ""
}

func (x *Entry) GetAriaService() string {
	if x != nil {
		return x.AriaService
	}
	return ""
}

func (x *Entry) GetCloudAccountID() string {
	if x != nil {
		return x.CloudAccountID
	}
	return ""
}

func (x *Entry) GetKubernetesClusterName() string {
	if x != nil {
		return x.KubernetesClusterName
	}
	return ""
}

func (x *Entry) GetKubernetesWorkloadName() string {
	if x != nil {
		return x.KubernetesWorkloadName
	}
	return ""
}

func (x *Entry) GetKubernetesNamespaceName() string {
	if x != nil {
		return x.KubernetesNamespaceName
	}
	return ""
}

func (x *Entry) GetKubernetesPodFullname() string {
	if x != nil {
		return x.KubernetesPodFullname
	}
	return ""
}

func (x *Entry) GetKubernetesPodName() string {
	if x != nil {
		return x.KubernetesPodName
	}
	return ""
}

func (x *Entry) GetKubernetesServiceName() string {
	if x != nil {
		return x.KubernetesServiceName
	}
	return ""
}

func (x *Entry) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *Entry) GetPCCloudAddress() string {
	if x != nil {
		return x.PCCloudAddress
	}
	return ""
}

func (x *Entry) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *Entry) GetKubernetesServiceRequestor() string {
	if x != nil {
		return x.KubernetesServiceRequestor
	}
	return ""
}

func (x *Entry) GetKubernetesServiceResponder() string {
	if x != nil {
		return x.KubernetesServiceResponder
	}
	return ""
}

func (x *Entry) GetKubernetesSrcClusterName() string {
	if x != nil {
		return x.KubernetesSrcClusterName
	}
	return ""
}

func (x *Entry) GetKubernetesSrcNamespace() string {
	if x != nil {
		return x.KubernetesSrcNamespace
	}
	return ""
}

func (x *Entry) GetEntityUID() string {
	if x != nil {
		return x.EntityUID
	}
	return ""
}

func (x *Entry) GetDestSpaceName() string {
	if x != nil {
		return x.DestSpaceName
	}
	return ""
}

func (x *Entry) GetSourceSpaceName() string {
	if x != nil {
		return x.SourceSpaceName
	}
	return ""
}

func (x *Entry) GetResponseCode() string {
	if x != nil {
		return x.ResponseCode
	}
	return ""
}

func (x *Entry) GetDefinedLabels() string {
	if x != nil {
		return x.DefinedLabels
	}
	return ""
}

var File_envoy_proto protoreflect.FileDescriptor

var file_envoy_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x65,
	0x6e, 0x76, 0x6f, 0x79, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x68, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x0e, 0x73, 0x65, 0x6e, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x73, 0x65, 0x6e, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22,
	0xbf, 0x07, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x41, 0x72, 0x69,
	0x61, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x41, 0x72, 0x69, 0x61, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x20, 0x0a,
	0x0b, 0x41, 0x72, 0x69, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x41, 0x72, 0x69, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x26, 0x0a, 0x0e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x34, 0x0a, 0x15, 0x4b, 0x75, 0x62, 0x65, 0x72,
	0x6e, 0x65, 0x74, 0x65, 0x73, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74,
	0x65, 0x73, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a,
	0x16, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x57, 0x6f, 0x72, 0x6b, 0x6c,
	0x6f, 0x61, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x4b,
	0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x17, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65,
	0x74, 0x65, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74,
	0x65, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x34, 0x0a, 0x15, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x50, 0x6f, 0x64,
	0x46, 0x75, 0x6c, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15,
	0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x50, 0x6f, 0x64, 0x46, 0x75, 0x6c,
	0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65,
	0x74, 0x65, 0x73, 0x50, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x50, 0x6f, 0x64, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65,
	0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x15, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x50, 0x43, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x50,
	0x43, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x1a, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65,
	0x74, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x6f, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1a, 0x4b, 0x75, 0x62, 0x65, 0x72,
	0x6e, 0x65, 0x74, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x6f, 0x72, 0x12, 0x3e, 0x0a, 0x1a, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65,
	0x74, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x64, 0x65, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1a, 0x4b, 0x75, 0x62, 0x65, 0x72,
	0x6e, 0x65, 0x74, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x3a, 0x0a, 0x18, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65,
	0x74, 0x65, 0x73, 0x53, 0x72, 0x63, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65,
	0x74, 0x65, 0x73, 0x53, 0x72, 0x63, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x36, 0x0a, 0x16, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x53,
	0x72, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x16, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x53, 0x72, 0x63,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x55, 0x49, 0x44, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x55, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x44, 0x65, 0x73, 0x74, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x44, 0x65, 0x73, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a,
	0x0f, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x32, 0x44, 0x0a, 0x0a, 0x41, 0x4c, 0x53, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x36, 0x0a, 0x0c, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12,
	0x14, 0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2e, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x22, 0x00, 0x30, 0x01, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x6c, 0x61,
	0x62, 0x2e, 0x65, 0x6e, 0x67, 0x2e, 0x76, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6f, 0x6e, 0x65, 0x2d, 0x74, 0x61, 0x6e, 0x7a, 0x75, 0x2f, 0x75, 0x6e, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x2d, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_envoy_proto_rawDescOnce sync.Once
	file_envoy_proto_rawDescData = file_envoy_proto_rawDesc
)

func file_envoy_proto_rawDescGZIP() []byte {
	file_envoy_proto_rawDescOnce.Do(func() {
		file_envoy_proto_rawDescData = protoimpl.X.CompressGZIP(file_envoy_proto_rawDescData)
	})
	return file_envoy_proto_rawDescData
}

var file_envoy_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_envoy_proto_goTypes = []interface{}{
	(*MetricRequest)(nil),         // 0: envoy.MetricRequest
	(*Entry)(nil),                 // 1: envoy.Entry
	(*timestamppb.Timestamp)(nil), // 2: google.protobuf.Timestamp
}
var file_envoy_proto_depIdxs = []int32{
	2, // 0: envoy.MetricRequest.sent_timestamp:type_name -> google.protobuf.Timestamp
	0, // 1: envoy.ALSService.StreamMetric:input_type -> envoy.MetricRequest
	1, // 2: envoy.ALSService.StreamMetric:output_type -> envoy.Entry
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_envoy_proto_init() }
func file_envoy_proto_init() {
	if File_envoy_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_envoy_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_envoy_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Entry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_envoy_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_envoy_proto_goTypes,
		DependencyIndexes: file_envoy_proto_depIdxs,
		MessageInfos:      file_envoy_proto_msgTypes,
	}.Build()
	File_envoy_proto = out.File
	file_envoy_proto_rawDesc = nil
	file_envoy_proto_goTypes = nil
	file_envoy_proto_depIdxs = nil
}
